
# Use Ubuntu 24.04 as the base image
FROM ubuntu:24.04
RUN apt-get update && apt-get install -y pcp
RUN apt-get update && apt-get install -y python3-pcp
RUN apt-get update && apt-get install -y python3
# Update the package list and install essential tools and packages

RUN apt-get update && apt-get install -y --no-install-recommends\
    build-essential \
    clang \
    clang-tidy \
    cmake \
    ninja-build \
    gdb \
    lldb \
    valgrind \
    lcov \
    ccache \
    cppcheck \
    nasm \
    meld \
    kdiff3 \
    jq

RUN apt-get update && apt-get install -y  python3 \
    python3-pip \
    python3-setuptools \
    python3-venv \
    pylint
RUN apt-get update && apt-get install -y    mingw-w64 \
    iproute2 \
    tcpdump \
    nmap \
    iperf3 \
    e2fsprogs \
    xfsprogs \
    btrfs-progs \
    dosfstools \
    ntfs-3g
RUN apt-get update && apt-get install -y lvm2 \
    iotop \
    iftop \
    sysstat \
    dstat \
    sqlite3 \
    gpg
# Install Python packages
# Install Python packages in a virtual environment
RUN python3 -m venv /opt/venv
RUN /opt/venv/bin/pip install --upgrade pip
RUN /opt/venv/bin/pip install pylint pytest requests numpy pandas matplotlib

# Add user dusr_kevin and give sudo privileges
RUN useradd -ms /bin/bash dusr_kevin && echo "dusr_kevin ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers

WORKDIR /home/dusr_kevin

# Set environment variable
ENV PROJECTS_HOME="/home/dusr_kevin/projects"
RUN apt-get update && apt-get install -y tree xz-utils

# Copy and extract prebuilt RISC-V and ARM toolchain binaries from host to container
#COPY --chown=dusr_kevin ./toolchain /home/dusr_kevin/toolchain
RUN ls -R /home/dusr_kevin/
# Extract toolchain archives and remove tar files
RUN mkdir -p /home/dusr_kevin/riscv/linux-multilib \
             /home/dusr_kevin/riscv/newlib \
             /home/dusr_kevin/arm/aarch64-none-elf \
             /home/dusr_kevin/arm/aarch64-none-linux-gnu \
             /home/dusr_kevin/arm/arm-none-eabi \
             /home/dusr_kevin/arm/arm-none-linux-gnueabihf
#RUN ls -R /home/dusr_kevin/
#RUN tar -xf /home/dusr_kevin/toolchain/riscv/riscv-linux-mulitib-tool.tar.xz -C /home/dusr_kevin/riscv/linux-multilib 
#RUN tar -xf /home/dusr_kevin/toolchain/riscv/riscv-newlib-tool.tar.xz -C /home/dusr_kevin/riscv/newlib 
#RUN tar -xf /home/dusr_kevin/toolchain/arm/arm-gnu-toolchain-14.2.rel1-x86_64-aarch64-none-elf.tar.xz -C /home/dusr_kevin/arm/aarch64-none-elf 
#RUN tar -xf /home/dusr_kevin/toolchain/arm/arm-gnu-toolchain-14.2.rel1-x86_64-aarch64-none-linux-gnu.tar.xz -C /home/dusr_kevin/arm/aarch64-none-linux-gnu 
#RUN tar -xf /home/dusr_kevin/toolchain/arm/arm-gnu-toolchain-14.2.rel1-x86_64-arm-none-eabi.tar.xz -C /home/dusr_kevin/arm/arm-none-eabi 
#RUN tar -xf /home/dusr_kevin/toolchain/arm/arm-gnu-toolchain-14.2.rel1-x86_64-arm-none-linux-gnueabihf.tar.xz -C /home/dusr_kevin/arm/arm-none-linux-gnueabihf 
#RUN rm -rf /home/dusr_kevin/toolchain/*.tar.xz
# Set up environment for the user
USER dusr_kevin
# Add RISC-V and ARM toolchain to PATH
ENV PATH="/home/dusr_kevin/riscv/linux-multilib/bin:/home/dusr_kevin/riscv/newlib/bin:/home/dusr_kevin/arm/aarch64-none-elf/bin:/home/dusr_kevin/arm/aarch64-none-linux-gnu/bin:/home/dusr_kevin/arm/arm-none-eabi/bin:/home/dusr_kevin/arm/arm-none-linux-gnueabihf/bin:$PATH"

# Verify installation
#RUN riscv64-unknown-elf-gcc --version && qemu-system-riscv64 --version && openocd --version
# Add a .dockerignore file
# Create a .dockerignore file to exclude unnecessary files
RUN echo "node_modules\n.git\n*.log" > .dockerignore

CMD ["/bin/bash"]

LABEL maintainer="kflyn825@outlook.com"
LABEL version="1.0"
LABEL description="A development environment for RISC-V"

